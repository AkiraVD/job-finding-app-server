// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash String

  birthday String?
  fullname String?
  profilePic String?
  phone String?
  gender String?
  role String?

  skills String @default("[]")
  certifications String @default("[]")

  gigs Gigs []
  orders Orders []
  comments Comments []

  @@map("users")
}

model Categories {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique
  jobs Jobs []

  @@map("categories")
}

model Jobs {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  picture String?

  categoryId Int
  category Categories @relation(fields: [categoryId],references: [id],onDelete: Cascade)

  gigs Gigs []

  @@map("jobs")
}

model Gigs {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title String
  rate Int?
  price Int?
  picture Int?
  description String?
  descShort String?
  stars Int?

  jobId Int
  job Jobs @relation(fields: [jobId],references: [id],onDelete: Cascade)

  creatorId Int
  creator User @relation(fields: [creatorId],references: [id],onDelete: Cascade)

  orders Orders []
  comments Comments []
  @@map("gigs")
}

model Orders {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  gigId Int
  gig Gigs @relation(fields: [gigId],references: [id],onDelete: Cascade)

  buyerId Int
  buyer User @relation(fields: [buyerId],references:[id],onDelete: Cascade)

  @@map("orders")
}

model Comments {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  content String
  star Int

  gigId Int
  gig Gigs @relation(fields: [gigId],references: [id],onDelete: Cascade)

  userId Int
  user User @relation(fields: [userId],references:[id],onDelete: Cascade)

  @@map("comments")
}
